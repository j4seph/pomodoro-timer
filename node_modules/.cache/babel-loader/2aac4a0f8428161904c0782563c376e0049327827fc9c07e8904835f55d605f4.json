{"ast":null,"code":"var _jsxFileName = \"/Users/707/Documents/code/pomodoro-timer/src/components/TimerTopButtons/TimerTopButtons.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport SettingsPanel from \"../SettingsPanel/SettingsPanel.js\";\nimport InfoPanel from \"../InfoPanel/InfoPanel.js\";\nimport settings from \"../../assets/settings.svg\";\nimport info from \"../../assets/info.svg\";\nimport clockIcon from \"../../assets/clock.svg\";\nimport clockIconDisabled from \"../../assets/clock-disabled.svg\";\nimport breakIcon from \"../../assets/coffee-blue.svg\";\nimport breakIconDisabled from \"../../assets/coffee-disabled.svg\";\nimport \"./InfoAndSettings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoAndSettings(_ref) {\n  _s();\n  let {\n    workTime,\n    setWorkTime,\n    showWorkTime,\n    setShowWorkTime,\n    breakTime,\n    setBreakTime,\n    showBreakTime,\n    setShowBreakTime,\n    soundPreference,\n    setSoundPreference\n  } = _ref;\n  const [infoPanel, setInfoPanel] = useState(false);\n  const [settingsPanel, setSettingsPanel] = useState();\n  function handleTimerType() {\n    if (showWorkTime) {\n      setShowWorkTime(false);\n      setShowBreakTime(true);\n    } else {\n      setShowWorkTime(true);\n      setShowBreakTime(false);\n    }\n  }\n  function handleInfoPanel() {\n    infoPanel ? setInfoPanel(false) : setInfoPanel(true);\n  }\n  function handleSettingsPanel() {\n    settingsPanel ? setSettingsPanel(false) : setSettingsPanel(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-and-settings\",\n    children: [infoPanel && /*#__PURE__*/_jsxDEV(InfoPanel, {\n      setInfoPanel: setInfoPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: info,\n      className: \"icon\",\n      onClick: handleInfoPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showWorkTime ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: clockIcon,\n      alt: \"study-timer-selected\",\n      className: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: clockIconDisabled,\n      alt: \"study-timer-off\",\n      className: \"icon\",\n      onClick: handleTimerType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), showBreakTime ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: breakIcon,\n      alt: \"break-timer-selected\",\n      className: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: breakIconDisabled,\n      alt: \"break-timer-off\",\n      className: \"icon\",\n      onClick: handleTimerType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), settingsPanel && /*#__PURE__*/_jsxDEV(SettingsPanel, {\n      workTime: workTime,\n      breakTime: breakTime,\n      setSettingsPanel: setSettingsPanel,\n      setWorkTime: setWorkTime,\n      setBreakTime: setBreakTime,\n      soundPreference: soundPreference,\n      setSoundPreference: setSoundPreference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: settings,\n      className: \"icon\",\n      onClick: handleSettingsPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(InfoAndSettings, \"Ur8LToZPmDfITIDuF2tHGWA4TMo=\");\n_c = InfoAndSettings;\nvar _c;\n$RefreshReg$(_c, \"InfoAndSettings\");","map":{"version":3,"names":["useState","SettingsPanel","InfoPanel","settings","info","clockIcon","clockIconDisabled","breakIcon","breakIconDisabled","jsxDEV","_jsxDEV","InfoAndSettings","_ref","_s","workTime","setWorkTime","showWorkTime","setShowWorkTime","breakTime","setBreakTime","showBreakTime","setShowBreakTime","soundPreference","setSoundPreference","infoPanel","setInfoPanel","settingsPanel","setSettingsPanel","handleTimerType","handleInfoPanel","handleSettingsPanel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","alt","_c","$RefreshReg$"],"sources":["/Users/707/Documents/code/pomodoro-timer/src/components/TimerTopButtons/TimerTopButtons.js"],"sourcesContent":["import { useState } from \"react\";\nimport SettingsPanel from \"../SettingsPanel/SettingsPanel.js\";\nimport InfoPanel from \"../InfoPanel/InfoPanel.js\";\nimport settings from \"../../assets/settings.svg\";\nimport info from \"../../assets/info.svg\";\nimport clockIcon from \"../../assets/clock.svg\";\nimport clockIconDisabled from \"../../assets/clock-disabled.svg\";\nimport breakIcon from \"../../assets/coffee-blue.svg\";\nimport breakIconDisabled from \"../../assets/coffee-disabled.svg\";\nimport \"./InfoAndSettings.css\";\n\nexport default function InfoAndSettings({\n  workTime,\n  setWorkTime,\n  showWorkTime,\n  setShowWorkTime,\n  breakTime,\n  setBreakTime,\n  showBreakTime,\n  setShowBreakTime,\n  soundPreference,\n  setSoundPreference,\n}) {\n  const [infoPanel, setInfoPanel] = useState(false);\n  const [settingsPanel, setSettingsPanel] = useState();\n\n  function handleTimerType() {\n    if (showWorkTime) {\n      setShowWorkTime(false);\n      setShowBreakTime(true);\n    } else {\n      setShowWorkTime(true);\n      setShowBreakTime(false);\n    }\n  }\n\n  function handleInfoPanel() {\n    infoPanel ? setInfoPanel(false) : setInfoPanel(true);\n  }\n\n  function handleSettingsPanel() {\n    settingsPanel ? setSettingsPanel(false) : setSettingsPanel(true);\n  }\n\n  return (\n    <div className=\"info-and-settings\">\n      {infoPanel && <InfoPanel setInfoPanel={setInfoPanel} />}\n      <img src={info} className=\"icon\" onClick={handleInfoPanel} />\n\n      {showWorkTime ? (\n        <img src={clockIcon} alt=\"study-timer-selected\" className=\"active\" />\n      ) : (\n        <img\n          src={clockIconDisabled}\n          alt=\"study-timer-off\"\n          className=\"icon\"\n          onClick={handleTimerType}\n        />\n      )}\n\n      {showBreakTime ? (\n        <img src={breakIcon} alt=\"break-timer-selected\" className=\"active\" />\n      ) : (\n        <img\n          src={breakIconDisabled}\n          alt=\"break-timer-off\"\n          className=\"icon\"\n          onClick={handleTimerType}\n        />\n      )}\n\n      {settingsPanel && (\n        <SettingsPanel\n          workTime={workTime}\n          breakTime={breakTime}\n          setSettingsPanel={setSettingsPanel}\n          setWorkTime={setWorkTime}\n          setBreakTime={setBreakTime}\n          soundPreference={soundPreference}\n          setSoundPreference={setSoundPreference}\n        />\n      )}\n      <img src={settings} className=\"icon\" onClick={handleSettingsPanel} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}